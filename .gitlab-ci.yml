variables:
    IMAGE_NAME: "mytrofanov/max_cv_next_rep"
    IMAGE_TAG: "2.0"

stages:
    - test
    - build
    - deploy

run_tests:
    stage: test
    image: node:18.16.0-alpine
    before_script:
        - npm install
    script:
        - npm run deploytest

build_image:
    stage: build
    image: docker:24.0.6
    services:
        - docker:24.0.6-dind
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
    before_script:
        - docker login -u $DOCKER_USER_NAME -p $DOCKER_PASSWORD
    script:
        - docker build -t $IMAGE_NAME:$IMAGE_TAG .
        - docker push $IMAGE_NAME:$IMAGE_TAG

deploy:
    stage: deploy
    before_script:
        - chmod 400 $AWS_KEY
    script:
        - ssh -o StrictHostKeyChecking=no -i $AWS_KEY ubuntu@52.29.34.218 "sudo docker login -u $DOCKER_USER_NAME -p '$DOCKER_PASSWORD'"
        - |
          ssh -i $AWS_KEY ubuntu@52.29.34.218 '
            containers=$(sudo docker ps -aq)
            if [ ! -z "$containers" ]; then
              sudo docker stop $containers
              sudo docker rm $containers
            else
              echo "No running containers to stop and remove."
            fi
          '
        - ssh -i $AWS_KEY ubuntu@52.29.34.218 "sudo docker run -d -p 80:3000 $IMAGE_NAME:$IMAGE_TAG"

